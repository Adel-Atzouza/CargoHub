// <auto-generated />
using System;
using CargoHub;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CargoHub.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("CargoHub.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("CargoHub.Item", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommodityCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "commodity_code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemGroup")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "item_group");

                    b.Property<int>("ItemLine")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "item_line");

                    b.Property<int>("ItemType")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "item_type");

                    b.Property<string>("ModelNumber")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "model_number");

                    b.Property<int>("PackOrderQuantity")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "pack_order_quantity");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "short_description");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "supplier_code");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "supplier_id");

                    b.Property<string>("SupplierPartNumber")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "supplier_part_number");

                    b.Property<int>("UnitOrderQuantity")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "unit_order_quantity");

                    b.Property<int>("UnitPurchaseQuantity")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "unit_purchase_quantity");

                    b.Property<string>("UpcCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "upc_code");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.HasKey("Uid");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("CargoHub.Item_type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.HasKey("Id");

                    b.ToTable("Item_Types");
                });

            modelBuilder.Entity("CargoHub.Models.Warehouse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.Property<string>("Zip")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContactId")
                        .IsUnique();

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("CargoHub.Models.Warehouse", b =>
                {
                    b.HasOne("CargoHub.Contact", "Contact")
                        .WithOne()
                        .HasForeignKey("CargoHub.Models.Warehouse", "ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
