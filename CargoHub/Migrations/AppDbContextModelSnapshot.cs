// <auto-generated />
using System;
using CargoHub;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CargoHub.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("CargoHub.ItemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ItemGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2648),
                            Description = "Items related to electronic devices and accessories.",
                            Name = "Electronics",
                            UpdatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2650)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2652),
                            Description = "Items for home and office furniture.",
                            Name = "Furniture",
                            UpdatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2652)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2654),
                            Description = "Items for writing, drawing, and office use.",
                            Name = "Stationery",
                            UpdatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2654)
                        });
                });

            modelBuilder.Entity("CargoHub.ItemLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ItemGroupId");

                    b.ToTable("ItemLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2769),
                            Description = "High-performance laptop for work and gaming.",
                            ItemGroupId = 3,
                            Name = "Laptop",
                            UpdatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2770)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2773),
                            Description = "Ergonomic chair for comfortable seating during long hours.",
                            ItemGroupId = 3,
                            Name = "Office Chair",
                            UpdatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2773)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2774),
                            Description = "Lined notebook for taking notes and organizing tasks.",
                            ItemGroupId = 3,
                            Name = "Notebook",
                            UpdatedAt = new DateTime(2024, 11, 12, 3, 5, 56, 104, DateTimeKind.Utc).AddTicks(2775)
                        });
                });

            modelBuilder.Entity("CargoHub.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemLineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ItemLineId");

                    b.ToTable("ItemType");
                });

            modelBuilder.Entity("CargoHub.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressExtra")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "address_extra");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "contact_name");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .HasColumnType("TEXT");

                    b.Property<string>("Reference")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "zip_code");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("CargoHub.Models.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<string>("ItemsJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Reference")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TransferFrom")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "transfer_from");

                    b.Property<string>("TransferStatus")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "transfer_status");

                    b.Property<int?>("TransferTo")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "transfer_to");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.HasKey("Id");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("CargoHub.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.Property<string>("Zip")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("CargoHub.ItemLine", b =>
                {
                    b.HasOne("CargoHub.ItemGroup", "ItemGroup")
                        .WithMany()
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemGroup");
                });

            modelBuilder.Entity("CargoHub.ItemType", b =>
                {
                    b.HasOne("CargoHub.ItemLine", "ItemLine")
                        .WithMany("ItemTypes")
                        .HasForeignKey("ItemLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemLine");
                });

            modelBuilder.Entity("CargoHub.ItemLine", b =>
                {
                    b.Navigation("ItemTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
